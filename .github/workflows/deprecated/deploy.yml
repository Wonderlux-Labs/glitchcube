name: Deploy to Glitch Cube

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allow manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy to Glitch Cube
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
      run: |
        # Setup SSH
        mkdir -p ~/.ssh
        echo "$DEPLOY_KEY" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        ssh-keyscan -H $DEPLOY_HOST >> ~/.ssh/known_hosts
        
        # Deploy
        ssh -i ~/.ssh/deploy_key $DEPLOY_USER@$DEPLOY_HOST "cd /home/$DEPLOY_USER/glitchcube && \
          git pull && \
          if [ -d 'config/homeassistant' ]; then \
            echo '📁 Updating Home Assistant configuration files...'; \
            if docker-compose ps | grep -q homeassistant; then \
              echo '🗑️  Removing old HA config files from container...'; \
              docker exec glitchcube_homeassistant rm -f /config/configuration.yaml /config/scenes.yaml 2>/dev/null; \
              docker exec glitchcube_homeassistant rm -rf /config/automations /config/scripts /config/sensors /config/template /config/input_helpers 2>/dev/null; \
              echo '📋 Copying new HA config files to container...'; \
              docker cp config/homeassistant/. glitchcube_homeassistant:/config/ || { echo '❌ Failed to copy HA config files!'; exit 1; }; \
              echo '🔄 Restarting Home Assistant to load new config...'; \
              docker-compose restart homeassistant; \
            fi; \
          fi && \
          if [ -d 'homeassistant_components' ]; then \
            echo '🏠 Installing Home Assistant custom components...'; \
            mkdir -p data/production/homeassistant/custom_components; \
            sudo rm -rf data/production/homeassistant/custom_components/glitchcube_conversation 2>/dev/null; \
            cp -r homeassistant_components/* data/production/homeassistant/custom_components/; \
            if docker-compose ps | grep -q homeassistant; then \
              echo '🔧 Installing custom components into running HA container...'; \
              for component in homeassistant_components/*/; do \
                component_name=\$(basename \"\$component\"); \
                echo \"   Installing: \$component_name\"; \
                docker cp \"\$component\" glitchcube_homeassistant:/config/custom_components/ || { echo \"❌ Failed to copy component: \$component_name\"; exit 1; }; \
              done; \
              echo '🔄 Restarting Home Assistant to load custom components...'; \
              docker-compose restart homeassistant; \
            fi; \
          fi && \
          echo '✅ Deployment complete!'"
        
    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "🎉 Successfully deployed to Glitch Cube!"
        else
          echo "❌ Deployment failed!"
        fi