# syntax=docker/dockerfile:1
# Multi-stage Dockerfile for Helicone AI Gateway with ARM64 support
# Based on: https://github.com/Helicone/ai-gateway

FROM rustlang/rust:nightly as builder

WORKDIR /usr/src/app

# Install cross-compilation tools and native dependencies
RUN apt-get update && apt-get install -y \
    gcc-aarch64-linux-gnu \
    libc6-dev-arm64-cross \
    pkg-config \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Add ARM target for nightly
RUN rustup target add aarch64-unknown-linux-gnu

# Set cross-compilation environment variables
ENV CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc
ENV CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc
ENV CXX_aarch64_unknown_linux_gnu=aarch64-linux-gnu-g++

# Clone Helicone AI Gateway source and build
RUN git clone https://github.com/Helicone/ai-gateway.git . && \
    cargo build --release --target aarch64-unknown-linux-gnu

# Runtime stage
FROM debian:bullseye-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy binary from builder
COPY --from=builder /usr/src/app/target/aarch64-unknown-linux-gnu/release/ai-gateway /usr/local/bin/

# Create non-root user
RUN groupadd -r helicone && useradd -r -g helicone helicone

# Set permissions
RUN chmod +x /usr/local/bin/ai-gateway

# Switch to non-root user
USER helicone

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:8080/health || exit 1

# Start the gateway
CMD ["ai-gateway"]