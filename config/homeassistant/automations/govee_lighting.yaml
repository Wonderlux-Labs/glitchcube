# Govee Lighting Automations for Glitch Cube Art Installation

- id: visitor_detected_govee_welcome
  alias: "Visitor Detected - Govee Welcome Lights"
  description: "Activate welcome lighting when visitor approaches"
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_detected
      from: "off"
      to: "on"
    - platform: state
      entity_id: sensor.distance_sensor
      to:
  condition:
    - condition: template
      value_template: >
        {{ 
          is_state('binary_sensor.motion_detected', 'on') or 
          (states('sensor.distance_sensor') | float(999) < 100)
        }}
  action:
    - service: script.visitor_approach_scene
    - service: script.show_interaction_prompt

- id: conversation_started_lighting
  alias: "Conversation Started - Mood Lighting"
  description: "Adjust lighting when conversation begins"
  trigger:
    - platform: state
      entity_id: sensor.conversation_status
      to: "active"
  action:
    - service: script.conversation_mood_lighting
      data:
        mood: "{{ states('sensor.current_persona') | default('curious') }}"
        intensity: 80
    - service: script.show_conversation_status
      data:
        visitors: "{{ states('sensor.visitor_count') | int(1) }}"
        status: "active"

- id: ai_personality_change_lighting
  alias: "AI Personality Change - Update Lighting"
  description: "Change lighting when AI personality shifts"
  trigger:
    - platform: state
      entity_id: sensor.current_persona
  condition:
    - condition: state
      entity_id: sensor.conversation_status
      state: "active"
  action:
    - service: script.conversation_mood_lighting
      data:
        mood: "{{ trigger.to_state.state }}"
        intensity: 75

- id: battery_low_govee_warning
  alias: "Low Battery - Govee Warning Lights"
  description: "Change lights to warning colors when battery is low"
  trigger:
    - platform: numeric_state
      entity_id: sensor.battery_level
      below: 30
  action:
    - service: script.battery_warning_lights
      data:
        battery_level: "{{ states('sensor.battery_level') | int }}"
    - service: script.show_battery_level
      data:
        battery_level: "{{ states('sensor.battery_level') | int }}"
        charging: "{{ is_state('binary_sensor.charging', 'on') }}"

- id: night_mode_govee_dim
  alias: "Night Mode - Dim Govee Lights"
  description: "Reduce lighting intensity during night hours"
  trigger:
    - platform: sun
      event: sunset
      offset: "+01:00:00"
  action:
    - service: script.conversation_mood_lighting
      data:
        mood: "contemplative"
        intensity: 20
    - service: script.night_mode_display

- id: morning_govee_restore
  alias: "Morning - Restore Govee Lighting"
  description: "Restore normal lighting in the morning"
  trigger:
    - platform: sun
      event: sunrise
      offset: "-00:30:00"
  action:
    - service: script.conversation_mood_lighting
      data:
        mood: "{{ states('sensor.current_persona') | default('curious') }}"
        intensity: 70
    - service: awtrix.glitchcube_display_settings
      data:
        BRI: 10     # Normal brightness
        ABRI: true  # Enable auto brightness
        WD: true    # Enable weekday display
        TIME_COL: [255, 255, 255]  # Normal time color

- id: no_visitors_idle_lighting
  alias: "No Visitors - Idle Lighting"
  description: "Switch to idle lighting when no visitors for extended period"
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_detected
      to: "off"
      for: "00:10:00"
  condition:
    - condition: state
      entity_id: sensor.conversation_status
      state: "idle"
  action:
    - service: mqtt.publish
      data:
        topic: "govee/{{ govee_device_id }}/set"
        payload: >
          {
            "brightness": 30,
            "color": {"r": 100, "g": 100, "b": 200},
            "effect": "fade"
          }
    - service: script.awtrix_clear_all

- id: charging_started_govee_green
  alias: "Charging Started - Green Govee Lights"
  description: "Show green lights when device starts charging"
  trigger:
    - platform: state
      entity_id: binary_sensor.charging
      from: "off"
      to: "on"
  action:
    - service: mqtt.publish
      data:
        topic: "govee/{{ govee_device_id }}/set"
        payload: >
          {
            "brightness": 60,
            "color": {"r": 0, "g": 255, "b": 0},
            "effect": "breathing"
          }
    - service: script.show_battery_level
      data:
        battery_level: "{{ states('sensor.battery_level') | int }}"
        charging: true