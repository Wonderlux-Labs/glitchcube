---
homeassistant:
  name: "Glitch Cube"
  latitude: 40.7682435937
  longitude: -119.218725792
  elevation: 3848
  time_zone: "America/Los_Angeles"
default_config:
# Enable frontend and API
frontend:
  themes: !include_dir_merge_named themes

# Enable configuration panel
config:

# Lovelace dashboard configuration
lovelace:
  mode: storage  # Keeps existing dashboards in UI mode
  dashboards:
    glitch-cube-monitor:
      mode: yaml
      title: ðŸŽ² Glitch Cube Monitor
      icon: mdi:cube
      show_in_sidebar: true
      filename: dashboard/glitch_cube_monitor.yaml

# Enable logbook for tracking interactions
logbook:
  # Note: include/exclude options are deprecated, use entity/automation filters instead

# Enable history tracking
history:
  # Note: include/exclude options are deprecated, use entity filters instead

# Enable recorder with MariaDB for better performance
recorder:
  db_url: mysql://homeassistant:homeassistant@core-mariadb/homeassistant?charset=utf8mb4
  purge_keep_days: 10  # Keep 10 days of history
  commit_interval: 5   # Commit every 5 seconds for reliability
  include:
    domains:
      - sensor
      - automation
      - input_datetime
      - input_text
      - logbook
    entities:
      - sensor.glitch_cube_app_health
      - sensor.internet_connectivity
      - sensor.installation_health
      - sensor.last_interaction_time
      - sensor.current_persona
# Enable recorder with MariaDB for better performance

# HTTP configuration for webhooks
http:
  use_x_forwarded_for: true
  trusted_proxies:
    - 127.0.0.1
    - 192.168.0.0/16
    - 172.16.0.0/12
    - 10.0.0.0/8

# Network discovery (removed - deprecated in modern HA)
# discovery:

# Enable mobile app support
mobile_app:

# Enable system health
system_health:

# Enable diagnostics
diagnostics:

# Include separate configuration files
automation: !include_dir_merge_list automations/
script: !include_dir_merge_named scripts/

# Include all input helpers (merge from multiple files)
input_datetime: !include input_helpers/input_datetime.yaml
input_text: !include_dir_merge_named input_helpers/
input_number: !include_dir_merge_named input_helpers/ 
input_boolean: !include_dir_merge_named input_helpers/

# Include counters
counter:
  daily_conversations:
    name: Daily Conversations
    icon: mdi:comment-multiple
    restore: true

  # Counter for total interactions
  total_interactions:
    name: Total Interactions
    icon: mdi:counter
    restore: true

# Include all sensors (REST sensors and template sensors)
sensor: !include_dir_merge_list sensors/
template: !include_dir_merge_list template/
binary_sensor: !include_dir_merge_list binary_sensors/

# Enable webhook integration (for external API calls)
webhook:

# Enable RESTful API
api:

# REST Commands for external integrations
rest_command: !include rest_commands.yaml

# Shell commands for deployment and SSH key management
shell_command:
  deploy_glitchcube: '/home/eric/glitchcube/scripts/pull-from-github.sh'
  rollback_glitchcube: 'cd /home/eric/glitchcube && docker tag glitchcube:last-known-good glitchcube:latest && docker-compose up -d glitchcube sidekiq'
  
  # SSH key setup for git operations
  setup_ssh_key: |
    if [ ! -d "/root/.ssh" ]; then
      mkdir -p /root/.ssh
      chmod 700 /root/.ssh
    fi
    if [ ! -f "/root/.ssh/id_rsa" ] && [ -f "/share/ssh_key" ]; then
      cp /share/ssh_key /root/.ssh/id_rsa
      chmod 600 /root/.ssh/id_rsa
      eval "$(ssh-agent -s)" 2>/dev/null
      ssh-add /root/.ssh/id_rsa 2>/dev/null
    fi
  
  # Check SSH key status
  check_ssh_key_status: |
    if [ -f "/root/.ssh/id_rsa" ]; then
      echo "SSH key exists: $(ls -la /root/.ssh/id_rsa)"
      ssh-keygen -l -f /root/.ssh/id_rsa 2>/dev/null || echo "SSH key validation failed"
    else
      echo "SSH key not found at /root/.ssh/id_rsa"
    fi

# Scene configuration for different installation modes
scene: !include scenes.yaml

# Logger configuration with verbose logging for important components
logger:
  default: info  # More verbose default level
  logs:
    # Suppress all Python warnings (deprecation, import, version mismatches, etc.)
    py.warnings: error
    # Suppress custom integration warnings
    homeassistant.loader: error
    
    # Verbose logging for key components
    homeassistant.core: info
    homeassistant.components.webhook: info
    homeassistant.components.rest: info
    homeassistant.components.sensor: info
    homeassistant.components.automation: info
    homeassistant.components.script: info
    homeassistant.helpers.template: info
    
    # Integration and config flow logging
    homeassistant.config_entries: info
    homeassistant.data_entry_flow: info
    homeassistant.setup: info
    homeassistant.bootstrap: info
    homeassistant.components.integration: info
    
    # Keep authentication warnings visible
    homeassistant.components.http.ban: warning
    homeassistant.components.auth: info
