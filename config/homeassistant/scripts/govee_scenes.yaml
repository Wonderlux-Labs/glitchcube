# Govee Light Scenes for Glitch Cube
# These scripts control Govee lights based on cube personality and events

conversation_mood_lighting:
  alias: "Set Conversation Mood Lighting"
  description: "Adjust Govee lights based on current AI personality"
  fields:
    mood:
      description: "Current AI mood (curious, excited, contemplative, etc.)"
      example: "curious"
    intensity:
      description: "Light intensity 0-100"
      example: 80
  sequence:
    - choose:
        - conditions:
            - condition: template
              value_template: "{{ mood == 'curious' }}"
          sequence:
            - service: mqtt.publish
              data:
                topic: "govee/{{ govee_device_id }}/set"
                payload: >
                  {
                    "brightness": {{ intensity }},
                    "color": {"r": 100, "g": 200, "b": 255},
                    "effect": "breathing"
                  }
        - conditions:
            - condition: template
              value_template: "{{ mood == 'excited' }}"
          sequence:
            - service: mqtt.publish
              data:
                topic: "govee/{{ govee_device_id }}/set"
                payload: >
                  {
                    "brightness": {{ intensity }},
                    "color": {"r": 255, "g": 150, "b": 0},
                    "effect": "strobe"
                  }
        - conditions:
            - condition: template
              value_template: "{{ mood == 'contemplative' }}"
          sequence:
            - service: mqtt.publish
              data:
                topic: "govee/{{ govee_device_id }}/set"
                payload: >
                  {
                    "brightness": {{ max(30, intensity // 2) }},
                    "color": {"r": 150, "g": 100, "b": 200},
                    "effect": "fade"
                  }
      default:
        - service: mqtt.publish
          data:
            topic: "govee/{{ govee_device_id }}/set"
            payload: >
              {
                "brightness": {{ intensity }},
                "color": {"r": 255, "g": 255, "b": 255},
                "effect": "solid"
              }

visitor_approach_scene:
  alias: "Visitor Approach Light Scene"
  description: "Welcome lighting when visitor detected"
  sequence:
    - service: mqtt.publish
      data:
        topic: "govee/{{ govee_device_id }}/set"
        payload: >
          {
            "brightness": 100,
            "color": {"r": 0, "g": 255, "b": 100},
            "effect": "pulse"
          }
    - delay: "00:00:10"
    - service: script.conversation_mood_lighting
      data:
        mood: "{{ states('sensor.current_persona') | default('curious') }}"
        intensity: 70

battery_warning_lights:
  alias: "Battery Warning Lights"
  description: "Orange/red lighting for low battery"
  fields:
    battery_level:
      description: "Current battery percentage"
      example: 25
  sequence:
    - choose:
        - conditions:
            - condition: template
              value_template: "{{ battery_level | int < 15 }}"
          sequence:
            - service: mqtt.publish
              data:
                topic: "govee/{{ govee_device_id }}/set"
                payload: >
                  {
                    "brightness": 100,
                    "color": {"r": 255, "g": 0, "b": 0},
                    "effect": "strobe"
                  }
        - conditions:
            - condition: template
              value_template: "{{ battery_level | int < 30 }}"
          sequence:
            - service: mqtt.publish
              data:
                topic: "govee/{{ govee_device_id }}/set"
                payload: >
                  {
                    "brightness": 80,
                    "color": {"r": 255, "g": 100, "b": 0},
                    "effect": "breathing"
                  }
      default:
        - service: script.conversation_mood_lighting
          data:
            mood: "{{ states('sensor.current_persona') | default('curious') }}"
            intensity: 70

govee_off:
  alias: "Turn Off Govee Lights"
  description: "Turn off all Govee devices"
  sequence:
    - service: mqtt.publish
      data:
        topic: "govee/+/set"
        payload: '{"state": "OFF"}'